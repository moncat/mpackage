<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.co.example.sqlmaps.product.TBrProductMapper" >  
  <!--  ************************expand your SQL below the line***********************  -->
  <select id="simpleSelect" parameterType="java.util.Map" resultMap="VoResultMap" >
    select 
    t.id,t.product_name,t.create_time,t.update_time
    from t_br_product t
    <include refid="Table_Join_Clause" />
    <include refid="Query_Where_Clause" />
  </select>
  <resultMap id="VoResultMap" type="com.co.example.entity.product.aide.TBrProductVo" extends="BaseResultMap" >
  <!-- 
    <collection property="tBrProductIngredients" resultMap="aaaaa">
    </collection>
     -->
    <result column="recommend_id" property="recommendId" jdbcType="BIGINT" />
    <result column="brandName" property="brandName" jdbcType="VARCHAR" />
  </resultMap>
  <!-- 
   <resultMap id="aaaaa" type="com.co.example.entity.product.TBrProductIngredient" >
    <result column="product_id" property="productId" jdbcType="BIGINT" />
    <result column="ingredient_id" property="ingredientId" jdbcType="BIGINT" />
  </resultMap>
   -->
  <sql id="Vo_Column_List" >
    t.id, 
    t.product_name, 
    t.product_alias, 
    t.jd_price, 
    t.tmall_price, 
    t.sales, 
    t.tmall_url, 
    t.jd_url, 
    t.apply_type, 
    t.apply_sn, 
    t.enterprise_id,
    t.enterprise_name, 
    t.enterprise_name_en, 
    t.producing_area, 
    t.confirm_date, 
    t.is_off, 
    t.cfda_processid, 
    t.cfda_new_processid, 
    t.bevol_mid, 
    t.remark, 
    t.source, 
    t.category_id, 
    t.category_name, 
    t.is_china, 
    t.is_special, 
    t.taobao_price, 
    t.taobao_sale, 
    t.taobao_turnover, 
    t.i_score, 
    t.product_brand_id, 
    t.product_brand_name, 
    t.more_data1, 
    t.more_data2, 
    t.item_order, 
    t.create_time, 
    t.create_by, 
    t.update_time, 
    t.update_by, 
    t.del_flg
    <!-- 
    ,
    tpi.product_id product_id,
    tpi.ingredient_id ingredient_id
     -->
     <!-- ,alias.field -->
      <if test="joinRecommendFlg" >
	       ,tbr.id  recommend_id
      </if>
      <!-- 
      <if test="commentFlg" >
	       , (REPLACE(REPLACE(REPLACE(pcs.jd_num_good,'ä¸‡','0000'),'.',''),'+','')) good 
      </if>
       -->
  </sql>
  <sql id="Vo_Where_Clause" >
     <if test="greaterThanConfirmDate != null" >
   		  and t.confirm_date > #{greaterThanConfirmDate,jdbcType=TIMESTAMP}
     </if>
     <if test="greaterThanCreateTime != null" >
   		  and t.create_time > #{greaterThanCreateTime,jdbcType=TIMESTAMP}
     </if>
     <if test="ingredientId != null" >
  		  and tbpi.ingredient_id = #{ingredientId,jdbcType=BIGINT}
     </if>
    
      <if test="productNameLike != null" >
          and t.product_name like concat('%',#{productNameLike,jdbcType=VARCHAR},'%')
      </if>
      <if test="enterpriseNameLike != null" >
          and t.enterprise_name like concat('%',#{enterpriseNameLike,jdbcType=VARCHAR},'%')
      </if>
      <if test="productBrandNameLike != null" >
          and t.product_brand_name like concat('%',#{productBrandNameLike,jdbcType=VARCHAR},'%')
      </if>
       
       <if test="productNamesLike != null" >
          <foreach item="item" index="index" collection="productNamesLike" open="and (t.product_name like '%"  close="%')" separator="%' or  t.product_name like '%">${item}</foreach>
      </if>
      <if test="enterpriseNamesLike != null" >
      	 <foreach item="item" index="index" collection="enterpriseNamesLike" open="and (t.enterprise_name like '%"  close="%')" separator="%' or  t.enterprise_name like '%">${item}</foreach>
      </if>
      <if test="productBrandNamesLike != null" >
      	 <foreach item="item" index="index" collection="productBrandNamesLike" open="and (t.product_brand_name like '%"  close="%')" separator="%' or  t.product_brand_name like '%">${item}</foreach>
      </if>
	  <if test="brandIsNullFlg" >
	      and tbpb.brand_id is null
      </if>
	  <if test="joinOperEnterpriseFlg" >
	      and tbpoe.enterprise_id is null
      </if>
 	  <if test="useTmallUrlNotNullFlg" >
         and tmall_url like '%detail%' 
      </if>
      <if test="useJdUrlNotNullFlg" >
        and jd_url like '%item%' 
      </if>
      <if test="brandId != null" >
        and tbpb.brand_id =  #{brandId,jdbcType=BIGINT}
      </if>
      <if test="labelId != null" >
        and tbpl.label_id =  #{labelId,jdbcType=BIGINT}
      </if>
   
      <if test="labelIdArr != null" >
        and tbpl.label_id in   
			<foreach collection="labelIdArr" index="index" item="item" open="(" close=")" separator="," >
	    	  	#{item,jdbcType=BIGINT}
	    	</foreach>
      </if>
      
      <if test="recommendIsNotNullFlg" >
        and tbr.id is not null
      </if>
     <if test="joinCollectFlg" >
	      and c.create_by = #{userId,jdbcType=BIGINT} and c.type =1 
      </if>
      
      <if test="realEnterpriseId != null" >
        and tbpe.enterprise_id =  #{realEnterpriseId,jdbcType=BIGINT}
      </if>
      
      <if test="joinManifestDataFlg" >
         and ma.manifest_id  =  #{manifestId,jdbcType=BIGINT}
      </if>
      
      <if test="brandFlg != null and brandFlg ==1 " >
         and   t.product_brand_id  is null
      </if>
      <if test="brandFlg != null and brandFlg ==2 " >
         and   t.product_brand_id  is not null
      </if>
      
      <if test="categoryFlg != null and categoryFlg ==1 " >
         and  t.category_id   is null
      </if>
      <if test="categoryFlg != null and categoryFlg ==2 " >
         and  t.category_id   is not null
      </if>
      
  </sql>
  <sql id="Table_Join_Clause" >
	  <if test="joinFlg" >
	      LEFT JOIN t_br_product_ingredient tbpi on t.id =  tbpi.product_id
      </if>
	  <if test="joinBrandFlg" >
	      left JOIN t_br_product_brand tbpb on t.id = tbpb.product_id
      </if>
	  <if test="joinLabelFlg" >
	      left JOIN t_br_product_label tbpl on t.id = tbpl.product_id
      </if>
	  <if test="joinOperEnterpriseFlg" >
	      left JOIN t_br_product_oper_enterprise tbpoe on t.id = tbpoe.product_id
      </if>
	  <if test="joinRecommendFlg" >
	      left JOIN t_br_recommend tbr on t.id = tbr.cid
      </if>
	  <if test="joinCollectFlg" >
	      left join t_br_user_collect c on t.id = c.cid
      </if>
	  <if test="joinRealEnterpriseFlg" >
	      left JOIN t_br_product_enterprise tbpe on t.id = tbpe.product_id
      </if>
	  <if test="joinManifestDataFlg" >
	      LEFT JOIN  t_br_manifest_data ma on t.id = ma.conn_id
      </if>
      <!-- 
      <if test="commentFlg" >
	       left join t_br_product_comment_statistics pcs on t.id = pcs.pid
      </if>
       -->
  </sql>
  <select id="selectOperEnterprise" parameterType="java.util.Map" resultType="java.lang.String" >
      select distinct  t.enterprise_name from t_br_product t where t.create_by = 0 
  </select>
   <update id="updateByArea" parameterType="com.co.example.entity.product.TBrProduct" >
     update t_br_product t
     set update_by = 1
     where  t.producing_area = #{producingArea,jdbcType=VARCHAR} and t.update_by =0
  </update>
  
  <select id="selectIngredientCount" parameterType="java.util.Map" resultType="com.co.example.entity.product.aide.TBrIngredientCountVo" >
		
		SELECT
			t.id, t.`name`, count(pi.id) num
		FROM
			`t_br_ingredient` t
		left join t_br_product_ingredient pi on t.id = pi.ingredient_id
		WHERE
			t.create_time >  #{limitTime,jdbcType=VARCHAR}
			and t.create_time &lt;  #{endTime,jdbcType=VARCHAR}
		group by t.id
		order by num desc
  </select>
  
    <select id="selectBeData" resultType="com.co.example.entity.product.aide.BeVo">
	SELECT DISTINCT t.enterprise_name eName,producing_area eArea ,count(*) num
	FROM
	t_br_product t
	WHERE
	t.enterprise_id IS NULL
	GROUP BY t.enterprise_name,producing_area	

  </select>
  
</mapper>