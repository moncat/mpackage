<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.co.example.sqlmaps.user.TUsersMapper">
  <resultMap id="BaseResultMap" type="com.co.example.entity.user.TUsers">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="display_name" jdbcType="VARCHAR" property="displayName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone" />
    <result column="visit_count" jdbcType="SMALLINT" property="visitCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, display_name, user_password, email, mobile_phone, visit_count, 
    create_time, last_time, last_ip, status, grade
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.co.example.entity.user.TUsers" useGeneratedKeys="true">
    insert into t_users (user_name, display_name, user_password, 
      email, mobile_phone, visit_count, 
      create_time, last_time, last_ip, 
      status, grade)
    values (#{userName,jdbcType=VARCHAR}, #{displayName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, #{visitCount,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastTime,jdbcType=TIMESTAMP}, #{lastIp,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{grade,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.co.example.entity.user.TUsers">
    update t_users
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null">
        display_name = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="visitCount != null">
        visit_count = #{visitCount,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.co.example.entity.user.TUsers">
    update t_users
    set user_name = #{userName,jdbcType=VARCHAR},
      display_name = #{displayName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      visit_count = #{visitCount,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      grade = #{grade,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectVoByPrimaryKey" parameterType="java.util.Map" resultMap="VoResultMap">
    select 
    <include refid="Vo_Column_List" />
    from t_users t
    <include refid="Table_Join_Clause" />
    where t.user_id = #{userId,jdbcType=INTEGER}
  </select>
  <sql id="Query_Where_Clause">
    <where>
      <if test="userId != null">
          and t.user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="userName != null">
          and t.user_name = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="displayName != null">
          and t.display_name = #{displayName,jdbcType=VARCHAR}
      </if>
      <if test="userPassword != null">
          and t.user_password = #{userPassword,jdbcType=VARCHAR}
      </if>
      <if test="email != null">
          and t.email = #{email,jdbcType=VARCHAR}
      </if>
      <if test="mobilePhone != null">
          and t.mobile_phone = #{mobilePhone,jdbcType=VARCHAR}
      </if>
      <if test="visitCount != null">
          and t.visit_count = #{visitCount,jdbcType=SMALLINT}
      </if>
      <if test="createTime != null">
          and t.create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="lastTime != null">
          and t.last_time = #{lastTime,jdbcType=TIMESTAMP}
      </if>
      <if test="lastIp != null">
          and t.last_ip = #{lastIp,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
          and t.status = #{status,jdbcType=TINYINT}
      </if>
      <if test="grade != null">
          and t.grade = #{grade,jdbcType=INTEGER}
      </if>
      <include refid="Vo_Where_Clause" />
    </where>
    <if test="sorting != null">
      order by ${sorting},t.user_id desc
    </if>
  </sql>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(t.user_id) from t_users t
    <include refid="Table_Join_Clause" />
    <include refid="Query_Where_Clause" />
  </select>
  <select id="select" parameterType="java.util.Map" resultMap="VoResultMap">
    select 
    <include refid="Vo_Column_List" />
    from t_users t
    <include refid="Table_Join_Clause" />
    <include refid="Query_Where_Clause" />
  </select>
  <delete id="delete" parameterType="java.util.Map">
    delete from t_users where user_id in (
    select t.user_id from (select * from t_users) t
    <include refid="Table_Join_Clause" />
    <include refid="Query_Where_Clause" />
    )
  </delete>
  <!--  ************************expand your SQL below the line***********************  -->
  <resultMap extends="BaseResultMap" id="VoResultMap" type="com.co.example.entity.user.aide.TUsersVo">
    <!--  <association property="beanName" javaType="beanVoFullyQualifiedName">  -->
    <!--  <result column="dbField" property="beanField" jdbcType="dbFieldStyle" /> -->
    <!--  </association> -->
  </resultMap>
  <sql id="Vo_Column_List">
    t.user_id, 
    t.user_name, 
    t.display_name, 
    t.user_password, 
    t.email, 
    t.mobile_phone, 
    t.visit_count, 
    t.create_time, 
    t.last_time, 
    t.last_ip, 
    t.status, 
    t.grade
     <!-- ,alias.field -->
  </sql>
  <sql id="Vo_Where_Clause">
    <!-- <if test="queryBeanField != null" > -->
    <!-- and dbField = #{queryBeanField,jdbcType=dbFieldStyle} -->
    <!-- </if> -->
  </sql>
  <sql id="Table_Join_Clause">
    <!-- left join tableName tn on t.primaryKey=tn.foreignKey -->
  </sql>
</mapper>