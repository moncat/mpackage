<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.co.example.sqlmaps.user.TBrUserAddressMapper" >
  <resultMap id="BaseResultMap" type="com.co.example.entity.user.TBrUserAddress" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="province_id" property="provinceId" jdbcType="BIGINT" />
    <result column="province_name" property="provinceName" jdbcType="VARCHAR" />
    <result column="city_id" property="cityId" jdbcType="BIGINT" />
    <result column="city_name" property="cityName" jdbcType="VARCHAR" />
    <result column="contry_id" property="contryId" jdbcType="BIGINT" />
    <result column="contry_name" property="contryName" jdbcType="VARCHAR" />
    <result column="town_id" property="townId" jdbcType="BIGINT" />
    <result column="town_name" property="townName" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="TINYINT" />
    <result column="item_order" property="itemOrder" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="is_active" property="isActive" jdbcType="TINYINT" />
    <result column="del_flg" property="delFlg" jdbcType="TINYINT" />
    <result column="app_id" property="appId" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, name, contact, province_id, province_name, city_id, city_name, contry_id, 
    contry_name, town_id, town_name, detail, is_default, item_order, create_time, create_by, 
    update_time, update_by, is_active, del_flg, app_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_br_user_address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_br_user_address
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.co.example.entity.user.TBrUserAddress" keyColumn="id" keyProperty="id" >
    <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE" >
      SELECT ${@com.github.moncat.common.generator.id.NextId@getId()}
    </selectKey>
    insert into t_br_user_address (id, uid, name, 
      contact, province_id, province_name, 
      city_id, city_name, contry_id, 
      contry_name, town_id, town_name, 
      detail, is_default, item_order, 
      create_time, create_by, update_time, 
      update_by, is_active, del_flg, 
      app_id)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{contact,jdbcType=VARCHAR}, #{provinceId,jdbcType=BIGINT}, #{provinceName,jdbcType=VARCHAR}, 
      #{cityId,jdbcType=BIGINT}, #{cityName,jdbcType=VARCHAR}, #{contryId,jdbcType=BIGINT}, 
      #{contryName,jdbcType=VARCHAR}, #{townId,jdbcType=BIGINT}, #{townName,jdbcType=VARCHAR}, 
      #{detail,jdbcType=VARCHAR}, #{isDefault,jdbcType=TINYINT}, #{itemOrder,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT}, #{isActive,jdbcType=TINYINT}, #{delFlg,jdbcType=TINYINT}, 
      #{appId,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.co.example.entity.user.TBrUserAddress" >
    update t_br_user_address
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="provinceName != null" >
        province_name = #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="cityName != null" >
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="contryId != null" >
        contry_id = #{contryId,jdbcType=BIGINT},
      </if>
      <if test="contryName != null" >
        contry_name = #{contryName,jdbcType=VARCHAR},
      </if>
      <if test="townId != null" >
        town_id = #{townId,jdbcType=BIGINT},
      </if>
      <if test="townName != null" >
        town_name = #{townName,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=TINYINT},
      </if>
      <if test="itemOrder != null" >
        item_order = #{itemOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=TINYINT},
      </if>
      <if test="delFlg != null" >
        del_flg = #{delFlg,jdbcType=TINYINT},
      </if>
      <if test="appId != null" >
        app_id = #{appId,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.co.example.entity.user.TBrUserAddress" >
    update t_br_user_address
    set uid = #{uid,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=BIGINT},
      province_name = #{provinceName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=BIGINT},
      city_name = #{cityName,jdbcType=VARCHAR},
      contry_id = #{contryId,jdbcType=BIGINT},
      contry_name = #{contryName,jdbcType=VARCHAR},
      town_id = #{townId,jdbcType=BIGINT},
      town_name = #{townName,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=TINYINT},
      item_order = #{itemOrder,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      is_active = #{isActive,jdbcType=TINYINT},
      del_flg = #{delFlg,jdbcType=TINYINT},
      app_id = #{appId,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectVoByPrimaryKey" parameterType="java.util.Map" resultMap="VoResultMap" >
    select 
    <include refid="Vo_Column_List" />
    from t_br_user_address t
    <include refid="Table_Join_Clause" />
    where t.id = #{id,jdbcType=BIGINT}
  </select>
  <sql id="Query_Where_Clause" >
    <where >
      <if test="id != null" >
          and t.id = #{id,jdbcType=BIGINT}
      </if>
      <if test="uid != null" >
          and t.uid = #{uid,jdbcType=BIGINT}
      </if>
      <if test="name != null" >
          and t.name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="contact != null" >
          and t.contact = #{contact,jdbcType=VARCHAR}
      </if>
      <if test="provinceId != null" >
          and t.province_id = #{provinceId,jdbcType=BIGINT}
      </if>
      <if test="provinceName != null" >
          and t.province_name = #{provinceName,jdbcType=VARCHAR}
      </if>
      <if test="cityId != null" >
          and t.city_id = #{cityId,jdbcType=BIGINT}
      </if>
      <if test="cityName != null" >
          and t.city_name = #{cityName,jdbcType=VARCHAR}
      </if>
      <if test="contryId != null" >
          and t.contry_id = #{contryId,jdbcType=BIGINT}
      </if>
      <if test="contryName != null" >
          and t.contry_name = #{contryName,jdbcType=VARCHAR}
      </if>
      <if test="townId != null" >
          and t.town_id = #{townId,jdbcType=BIGINT}
      </if>
      <if test="townName != null" >
          and t.town_name = #{townName,jdbcType=VARCHAR}
      </if>
      <if test="detail != null" >
          and t.detail = #{detail,jdbcType=VARCHAR}
      </if>
      <if test="isDefault != null" >
          and t.is_default = #{isDefault,jdbcType=TINYINT}
      </if>
      <if test="itemOrder != null" >
          and t.item_order = #{itemOrder,jdbcType=INTEGER}
      </if>
      <if test="createTime != null" >
          and t.create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="createBy != null" >
          and t.create_by = #{createBy,jdbcType=BIGINT}
      </if>
      <if test="updateTime != null" >
          and t.update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateBy != null" >
          and t.update_by = #{updateBy,jdbcType=BIGINT}
      </if>
      <if test="isActive != null" >
          and t.is_active = #{isActive,jdbcType=TINYINT}
      </if>
      <if test="delFlg != null" >
          and t.del_flg = #{delFlg,jdbcType=TINYINT}
      </if>
      <if test="appId != null" >
          and t.app_id = #{appId,jdbcType=TINYINT}
      </if>
      <include refid="Vo_Where_Clause" />
    </where>
    <if test="sorting != null" >
      order by ${sorting},t.id desc
    </if>
  </sql>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Long" >
    select count(t.id) from t_br_user_address t
    <include refid="Table_Join_Clause" />
    <include refid="Query_Where_Clause" />
  </select>
  <select id="select" parameterType="java.util.Map" resultMap="VoResultMap" >
    select 
    <include refid="Vo_Column_List" />
    from t_br_user_address t
    <include refid="Table_Join_Clause" />
    <include refid="Query_Where_Clause" />
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    delete from t_br_user_address where id in (
    select t.id from (select * from t_br_user_address) t
    <include refid="Table_Join_Clause" />
    <include refid="Query_Where_Clause" />
    )
  </delete>
  <!--  ************************expand your SQL below the line***********************  -->
  <resultMap id="VoResultMap" type="com.co.example.entity.user.aide.TBrUserAddressVo" extends="BaseResultMap" >
    <!--  <association property="beanName" javaType="beanVoFullyQualifiedName">  -->
    <!--  <result column="dbField" property="beanField" jdbcType="dbFieldStyle" /> -->
    <!--  </association> -->
    
  </resultMap>
  <sql id="Vo_Column_List" >
    t.id, 
    t.uid, 
    t.name, 
    t.contact, 
    t.province_id, 
    t.province_name, 
    t.city_id, 
    t.city_name, 
    t.contry_id, 
    t.contry_name, 
    t.town_id, 
    t.town_name, 
    t.detail, 
    t.is_default, 
    t.item_order, 
    t.create_time, 
    t.create_by, 
    t.update_time, 
    t.update_by, 
    t.is_active, 
    t.del_flg, 
    t.app_id
  </sql>
  <sql id="Vo_Where_Clause" >
    <if test="nameLike != null" >
        and t.name like concat ('%', #{nameLike,jdbcType=VARCHAR},'%')
     </if>
    <if test="contactLike != null" >
        and t.contact like concat ('%', #{contactLike,jdbcType=VARCHAR},'%')
     </if>
    <if test="detailLike != null" >
        and t.detail like concat ('%', #{detailLike,jdbcType=VARCHAR},'%')
     </if>
  </sql>
  <sql id="Table_Join_Clause" >
     
  </sql>
</mapper>